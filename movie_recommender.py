# -*- coding: utf-8 -*-
"""movie_recommender.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11Q5JRcKha7Vrvk06sSPVf1a_RKxwxPXa
"""

import pandas as pd
import difflib
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity

# Load data
import os
if not os.path.exists("movies.csv"):
    raise FileNotFoundError("⚠️ 'movies.csv' not found in current directory!")

movies_data = pd.read_csv("movies.csv")


# Preprocess
selected_features = ['genres', 'keywords', 'tagline', 'cast', 'director']
for feature in selected_features:
    movies_data[feature] = movies_data[feature].fillna('')

combined_features = movies_data.apply(lambda row: ' '.join(row[feature] for feature in selected_features), axis=1)

# TF-IDF
vectorizer = TfidfVectorizer()
feature_vectors = vectorizer.fit_transform(combined_features)

# Cosine similarity
similarity = cosine_similarity(feature_vectors)

# Movie input
movie_name = input("Enter a movie name: ")
list_of_all_titles = movies_data['title'].tolist()
find_close_match = difflib.get_close_matches(movie_name, list_of_all_titles)

if find_close_match:
    close_match = find_close_match[0]
    print(f"\nClosest match: {close_match}")

    index_of_movie = movies_data[movies_data.title == close_match].index[0]
    similarity_scores = list(enumerate(similarity[index_of_movie]))
    sorted_movies = sorted(similarity_scores, key=lambda x: x[1], reverse=True)[1:6]

    print("\nRecommended Movies:")
    for i, movie in enumerate(sorted_movies, start=1):
        movie_title = movies_data.iloc[movie[0]].title
        print(f"{i}. {movie_title}")
else:
    print("No close matches found.")

